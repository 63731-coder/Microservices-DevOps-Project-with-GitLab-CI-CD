stages:
  - build
  - test
  - deploy

# üîß Build Flask
build-flask:
  stage: build
  image: mcr.microsoft.com/devcontainers/python:0-3.11
  script:
    - cd service-python
    - pip install -r requirements.txt
    - echo "Flask service built."
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

# üîß Build Spring Boot
build-springboot:
  stage: build
  image: maven:3.9.3-eclipse-temurin-17
  script:
    - cd service-java
    - mvn clean install
    - echo "Spring Boot service built."
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

# üß™ Test Flask
test-flask:
  stage: test
  image: mcr.microsoft.com/devcontainers/python:0-3.11
  script:
    - cd service-python
    - pip install -r requirements.txt
    - python -m unittest test_app.py
    - echo "Flask tests completed."
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

# üß™ Test Spring Boot
test-springboot:
  stage: test
  image: maven:3.9.3-eclipse-temurin-17
  script:
    - cd service-java
    - mvn test
    - echo "Spring Boot tests completed."
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

# üöÄ D√©ploiement complet avec Azure CLI
deploy:
  stage: deploy
  image: mcr.microsoft.com/azure-cli:latest
  before_script:
    - echo "Installation de Docker..."
    - apt-get update && apt-get install -y docker.io
    - service docker start
  script:
    # üîê Authentification Azure
    - echo "Authentification sur Azure..."
    - az login --service-principal -u "$ARM_CLIENT_ID" -p "$ARM_CLIENT_SECRET" --tenant "$ARM_TENANT_ID"
    - az account set --subscription "$ARM_SUBSCRIPTION_ID"

    # üê≥ Build & push images
    - echo "Construction des images Docker..."
    - az acr login --name scenarioregistry63731
    - docker build -t scenarioregistry63731.azurecr.io/63731-service-python:latest ./service-python
    - docker build -t scenarioregistry63731.azurecr.io/63731-service-java:latest ./service-java
    - docker push scenarioregistry63731.azurecr.io/63731-service-python:latest
    - docker push scenarioregistry63731.azurecr.io/63731-service-java:latest
    - echo "Images Docker pouss√©es vers ACR."

    # üöÄ D√©ploiement sur App Services
    - echo "D√©ploiement des applications sur Azure App Service..."
    - az webapp config container set --name mon-app-python-63731 --resource-group rg-microservices-app --docker-custom-image-name scenarioregistry63731.azurecr.io/63731-service-python:latest
    - az webapp config container set --name mon-app-java-63731 --resource-group rg-microservices-app --docker-custom-image-name scenarioregistry63731.azurecr.io/63731-service-java:latest
    - echo "D√©ploiement termin√©."

  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
